---
- name: Enable upstream repo
  apt_repository:
    repo: ppa:gophers/archive
    codename: xenial

# - name: Check if "{{ golang_package }}" package is already installed
#   shell: dpkg-query -W -f='${Status} ${Version}' "{{ golang_package }}" | grep 'hold ok installed {{ golang_version }}'
#   register: golang_is_installed
#   failed_when: no
#   changed_when: no

#- name: Hold golang package
#  command: apt-mark unhold "{{ golang_package }}"
#  when: golang_is_installed.rc == 1

- name: "Install {{ golang_package }} version {{ golang_package_version }} package"
  apt:
    #name: "{{ golang_package }}={{ golang_package_version }}"
    name: 
      - "{{ golang_package }}-{{ golang_package_version }}-go"
      - "{{ golang_package }}-{{ golang_package_version }}-doc"
      - "golang-golang-x-tools"
    state: latest
#  when: golang_is_installed.rc == 1
#  register: golang_is_installed

# - name: Hold golang package
#   command: apt-mark hold "{{ golang_package }}"
#   when: golang_is_installed.rc == 1

- name: Update alternatives for go
  alternatives:
    name: "{{ item }}"
    link: "/usr/bin/{{ item }}"
    path: "/usr/lib/go-{{ golang_package_version }}/bin/{{ item }}"
  with_items:
    - go
    - gofmt

- name: Manage environment vars
  lineinfile:
    name: /etc/profile.d/go
    regexp: '^export GOROOT'
    create: yes
    line: "export GOROOT=/usr/lib/go-{{ golang_package_version }}"

